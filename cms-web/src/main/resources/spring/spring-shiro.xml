<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd


	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-4.0.xsd">


    <bean id="credentialsMatcher" class="com.xzjie.et.core.security.credentials.EhcacheRetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

    <bean id="systemAuthorizingRealm" class="com.xzjie.et.core.security.SystemAuthorizingRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="false"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

    <bean id="clientAuthorizingRealm" class="com.xzjie.client.core.security.ClientAuthorizingRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="false"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

    <!--多个realm 的集中管理  -->
    <bean id="defineModularRealmAuthenticator" class=" com.xzjie.et.core.security.DefineModularRealmAuthenticator">
        <property name="definedRealms">
            <map>
                <entry key="systemAuthorizingRealm" value-ref="systemAuthorizingRealm" />
                <entry key="clientAuthorizingRealm" value-ref="clientAuthorizingRealm" />
            </map>
        </property>
        <property name="authenticationStrategy">
            <bean class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy" />
        </property>
    </bean>

    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">

        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>

    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('fmTjXwiirYLDmFuw8TjYnA==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>


    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>


    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>


    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--<property name="realm" ref="systemAuthorizingRealm"/>-->
        <!--<property name="realms"  >
            <list>
                <bean id="systemAuthorizingRealm" class="com.xzjie.et.core.security.SystemAuthorizingRealm" />
                <bean id="clientAuthorizingRealm" class="com.xzjie.client.core.security.ClientAuthorizingRealm" />
            </list>
        </property>-->
        <property name="authenticator" ref="defineModularRealmAuthenticator" />
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <bean id="clientPathMatchingFilter" class="com.xzjie.client.core.security.ClientPathMatchingFilter"/>

    <bean id="systemAuthFilter" class="com.xzjie.et.core.security.FormAuthenticationCaptchaFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="captchaParam" value="captcha"/>
        <property name="stypeParam" value="stype"/>
        <property name="isMobileParam" value="isMobile" />
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="failureKeyAttribute" value="shiroLoginFailure"/>
        <property name="loginUrl" value="/${web.adminPath}/login"/>
        <property name="successUrl" value="/${web.adminPath}/index" />
    </bean>

    <bean id="clientAuthFilter" class="com.xzjie.et.core.security.FormAuthenticationCaptchaFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="captchaParam" value="captcha"/>
        <property name="stypeParam" value="stype"/>
        <property name="isMobileParam" value="isMobile" />
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="failureKeyAttribute" value="shiroLoginFailure"/>
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/index" />
    </bean>


    <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/${web.adminPath}/login" />
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/${web.adminPath}/login"/>
        <property name="successUrl" value="/${web.adminPath}/index" />
        <property name="unauthorizedUrl" value="/unauthorized.jsp" />
        <property name="filters">
            <util:map>
                <entry key="system_authc" value-ref="systemAuthFilter"/>
                <entry key="authc" value-ref="clientAuthFilter"/>
                <entry key="client_authc" value-ref="clientPathMatchingFilter"/>
                <entry key="logout" value-ref="logout" />
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /resources/** = anon
                /kaptcha/** = anon
                /logout = logout
                /${web.apiPath}/oauth/token = anon
                /${web.apiPath}/** = anon
                /login = authc
                /${web.adminPath}/login = system_authc
                /${web.adminPath}/** = user
                /** = client_authc
                <!--/authorize=anon
                /authenticated = authc-->
            </value>
        </property>
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>